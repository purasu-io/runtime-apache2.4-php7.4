session.save_path = "/private/sessions"
open_basedir = "/public:/tmp"

error_log = /dev/stderr

mysqli.default_socket=/var/run/mysqld/mysqld.sock
mysql.default_socket=/var/run/mysqld/mysqld.sock
pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock

max_execution_time = 300
max_input_time = 300
max_input_vars = 10000
memory_limit = 512M
post_max_size = 128M
upload_max_filesize = 128M
date.timezone = "Europe/Helsinki"
opcache.file_cache = ""
sendmail_path = "/usr/sbin/sendmail -t"

; Enable Zend Optimizer - cache code in memory instead of loading from the filesystem
opcache.enable=1

; fatal errors (level 0) or errors (level 1)
opcache.log_verbosity_level=1

; Ignore opcache.revaliate_freq never check PHP files for updated code.
; Ensures there's not a mix of cached and updated PHP code running at the same time.
opcache.validate_timestamps=1

; How often to check script timestamps for updates, in seconds. 0 will result in OPcache checking for updates on every request.
; This configuration directive is ignored if opcache.validate_timestamps is disabled.
opcache.revalidate_freq=2

; How many PHP files can be held in memory at once
opcache.max_accelerated_files=8000

; Use function opcachegetstatus() to check how much memory opcache is consuming
; Value is MB.
opcache.memory_consumption=192

; String interning = if you have the string "foobar" 1000 times in your code,
; internally PHP will store 1 immutable variable for this string and just use a
; pointer to it for the other 999 times you use it.
; This setting shares it across ALL of your php worker processes.
; Saves memory and improves performance, especially in big applications.
; Value is MB.
opcache.interned_strings_buffer=16

; Provide a faster mechanism for calling the deconstructors at the end of a request
; to speed up the response - recycle php workers for the next incoming request faster.
opcache.fast_shutdown=1
